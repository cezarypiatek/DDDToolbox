name: release
on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - '!src/.editorconfig'
jobs:
  build-extension:
    runs-on: windows-latest
    env: 
        DOTNET_NOLOGO: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        Configuration: Release
        SolutionPath: src\DDDToolbox\DDDToolbox.sln
        VsixManifestPath: src\DDDToolbox\DDDToolbox\DDDToolbox.Vsix\source.extension.vsixmanifest
        VsixPath: src\DDDToolbox\DDDToolbox\DDDToolbox.Vsix\bin\Release\DDDToolbox.vsix       
        VsixPublishManifestPath: src\DDDToolbox\DDDToolbox\DDDToolbox.Vsix\publishManifest.json
        Version: '1.2.${{ github.run_number }}'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2   
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      id: MsBuildSetup
      with:
        vs-version: '[16.8,16.9)'
    - name: Setup nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionPath
    - name: Set version for VSIX
      run: |
        $manifestXml = [xml](Get-Content $env:VsixManifestPath -Raw)
        $manifestXml.PackageManifest.Metadata.Identity.Version = $env:Version
        $manifestXml.save($env:VsixManifestPath)
    - name: Build extension
      run: msbuild $env:SolutionPath /t:Rebuild
      env: 
        DeployExtension: False
    - name: Generate release note
      run: |
        git fetch --prune --unshallow
        $commitLog = git log "$(git describe --tags --abbrev=0 `@^)..HEAD" --pretty=format:"- %s"
        "What's new: `r`n`r`n$([string]::Join("`r`n",$commitLog))" | Out-File release_note.md -Encoding utf8
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.Version }}
        release_name:  ${{ env.Version }}
        body_path: release_note.md
        draft: false
        prerelease: false
    - name: Upload Release Asset - vsix
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.VsixPath }}
        asset_name: DDDToolbox.vsix
        asset_content_type: binary/octet-stream       
    - name: Publish extension to Marketplace
      uses: cezarypiatek/VsixPublisherAction@0.1
      with:
        extension-file: ${{ env.VsixPath }}
        publish-manifest-file: ${{ env.VsixPublishManifestPath }}
        personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}